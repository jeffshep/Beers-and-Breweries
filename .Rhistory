require(twitteR)
rdmTweets <- searchTwitter('#exeter', n=500)
tw.df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
RemoveAtPeople <- function(tweet) {
gsub("@\\w+", "", tweet)
}
tweets <- as.vector(sapply(tw.df$text, RemoveAtPeople))
require(tm)
#Call with eg: tw.c=generateCorpus(tw.df$text)
generateCorpus= function(df,my.stopwords=c()){
tw.corpus= Corpus(VectorSource(df))
tw.corpus = tm_map(tw.corpus, removePunctuation)
tw.corpus = tm_map(tw.corpus, tolower)
tw.corpus = tm_map(tw.corpus, removeWords, stopwords('english'))
tw.corpus = tm_map(tw.corpus, removeWords, my.stopwords)
tw.corpus = tm_map(tw.corpus, stemDocument)
tw.corpus
}
wordcloud.generate=function(tw.corpus,min.freq=3){
require(wordcloud)
doc.m = TermDocumentMatrix(tw.corpus,control = list(minWordLength = 1))
dm = as.matrix(doc.m)
# calculate the frequency of words
v = sort(rowSums(dm), decreasing=TRUE)
d = data.frame(word=names(v), freq=v)
#Generate the wordcloud
wc=wordcloud(d$word, d$freq, min.freq=min.freq)
wc
}
print(wordcloud.generate(generateCorpus(tweets,'dev8d'),7))
##Generate an image file of the wordcloud
png(filename='~R/plots/twitter1')
wordcloud.generate(generateCorpus(tweets,'dev8d'),7)
dev.off()
install.packages(twitteR)
install.packages("twitteR")
require(twitteR)
rdmTweets <- searchTwitter('#exeter', n=500)
tw.df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
remove(generateCorpus)
remove(RemoveAtPeople)
remove(wordcloud.generate)
a -> 5+5
a = 5+5
b <- 5+5
remove(a)
remove(b)
library(rworldmap)
library(ggmap)
library(plyr)
install.packages(rworldmap)
install.packages("rworldmap")
install.packages(ggmap)
install.packages("ggmap")
install.packages(plyr)
install.packages("plyr")
library(rworldmap)
library(plyr)
library(rworldmap)
library(ggmap)
library(plyr)
brewerylocs = read.csv("brewery_locations.csv")
brewerylocs$id <- NULL
beers = read.csv("beers.csv")
num_beers = count(beers, "brewery_id")
total <- merge(num_beers, brewerylocs, by = "brewery_id")
map <- get_map(location = "Europe", zoom = 4)
mapPoints <- ggmap(map) +
geom_point(aes(x = longitude, y = latitude, size = (freq)), data = total, alpha = .5)
mapPoints
getwd()
setwd("/Beers-and_Breweries")
getwd()
setwd("/Home")
getwd()
brewerylocs = read.csv("brewery_locations.csv")
br = read.csv("brewery_locations.csv")
br = read.csv("brewery_locations")
getwd()
setwd("/Home")
br = read.csv("brewery_locations")
br = read.csv("brewery_locations.csv")
setwd("/Documents/Github/Beers-and-Breweries")
setwd(/admin/Beers-and-Breweries)
setwd("/admin/Beers-and-Breweries")
getwd()
setwd("/admin")
setwd("/Users/admin/Beers-and-Breweries")
getwd()
brewerylocs = read.csv("brewery_locations.csv")
library(rworldmap)
library(ggmap)
library(plyr)
brewerylocs = read.csv("brewery_locations.csv")
brewerylocs$id <- NULL
beers = read.csv("beers.csv")
num_beers = count(beers, "brewery_id")
total <- merge(num_beers, brewerylocs, by = "brewery_id")
map <- get_map(location = "Europe", zoom = 4)
mapPoints <- ggmap(map) +
geom_point(aes(x = longitude, y = latitude, size = (freq)), data = total, alpha = .5)
mapPoints
